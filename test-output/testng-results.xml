<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="4" total="17" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="KTCTC" duration-ms="48043" started-at="2022-08-05T21:34:53 IST" finished-at="2022-08-05T21:35:41 IST">
    <groups>
    </groups>
    <test name="regression" duration-ms="48043" started-at="2022-08-05T21:34:53 IST" finished-at="2022-08-05T21:35:41 IST">
      <class name="regression.InventoryProduct">
        <test-method status="PASS" signature="beforeClassOfA()[pri:0, instance:regression.InventoryProduct@33f88ab]" name="beforeClassOfA" is-config="true" duration-ms="7647" started-at="2022-08-05T21:35:33 IST" finished-at="2022-08-05T21:35:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassOfA -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.InventoryProduct@33f88ab]" name="beforeMethod" is-config="true" duration-ms="3" started-at="2022-08-05T21:35:40 IST" finished-at="2022-08-05T21:35:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.InventoryProduct.verifyUserCanAddProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyUserCanAddProduct()[pri:0, instance:regression.InventoryProduct@33f88ab]" name="verifyUserCanAddProduct" duration-ms="1" started-at="2022-08-05T21:35:40 IST" finished-at="2022-08-05T21:35:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanAddProduct -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.InventoryProduct@33f88ab]" name="afterMethod" is-config="true" duration-ms="4" started-at="2022-08-05T21:35:40 IST" finished-at="2022-08-05T21:35:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanAddProduct status=SUCCESS method=InventoryProduct.verifyUserCanAddProduct()[pri:0, instance:regression.InventoryProduct@33f88ab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:regression.InventoryProduct@33f88ab]" name="afterClass" is-config="true" duration-ms="976" started-at="2022-08-05T21:35:40 IST" finished-at="2022-08-05T21:35:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- regression.InventoryProduct -->
      <class name="regression.LoginFunctionalityTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.LoginFunctionalityTest@2833cc44]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2022-08-05T21:35:33 IST" finished-at="2022-08-05T21:35:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.LoginFunctionalityTest.verifyUsercanLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyUsercanLogin()[pri:1, instance:regression.LoginFunctionalityTest@2833cc44]" name="verifyUsercanLogin" duration-ms="1" started-at="2022-08-05T21:35:33 IST" finished-at="2022-08-05T21:35:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUsercanLogin -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.LoginFunctionalityTest@2833cc44]" name="afterMethod" is-config="true" duration-ms="2" started-at="2022-08-05T21:35:33 IST" finished-at="2022-08-05T21:35:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUsercanLogin status=SUCCESS method=LoginFunctionalityTest.verifyUsercanLogin()[pri:1, instance:regression.LoginFunctionalityTest@2833cc44] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.LoginFunctionalityTest@2833cc44]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2022-08-05T21:35:33 IST" finished-at="2022-08-05T21:35:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.LoginFunctionalityTest.verifyUsercanAddBrand()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyUsercanAddBrand()[pri:2, instance:regression.LoginFunctionalityTest@2833cc44]" name="verifyUsercanAddBrand" duration-ms="1" started-at="2022-08-05T21:35:33 IST" finished-at="2022-08-05T21:35:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUsercanAddBrand -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.LoginFunctionalityTest@2833cc44]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-08-05T21:35:33 IST" finished-at="2022-08-05T21:35:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUsercanAddBrand status=SUCCESS method=LoginFunctionalityTest.verifyUsercanAddBrand()[pri:2, instance:regression.LoginFunctionalityTest@2833cc44] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.LoginFunctionalityTest@2833cc44]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2022-08-05T21:35:33 IST" finished-at="2022-08-05T21:35:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.LoginFunctionalityTest.verifyUsercanInventory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyUsercanInventory()[pri:3, instance:regression.LoginFunctionalityTest@2833cc44]" name="verifyUsercanInventory" duration-ms="2" started-at="2022-08-05T21:35:33 IST" finished-at="2022-08-05T21:35:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUsercanInventory -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.LoginFunctionalityTest@2833cc44]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-08-05T21:35:33 IST" finished-at="2022-08-05T21:35:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUsercanInventory status=SUCCESS method=LoginFunctionalityTest.verifyUsercanInventory()[pri:3, instance:regression.LoginFunctionalityTest@2833cc44] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="afterClass()[pri:0, instance:regression.LoginFunctionalityTest@2833cc44]" name="afterClass" is-config="true" duration-ms="1" started-at="2022-08-05T21:35:33 IST" finished-at="2022-08-05T21:35:33 IST">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.uiFramework.KTCTC.testbase.TestBase.afterClass(TestBase.java:71)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:61)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:366)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:320)
at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:217)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:130)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- regression.LoginFunctionalityTest -->
      <class name="regression.InventoryCategoryTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="beforeSuite" is-config="true" duration-ms="173" started-at="2022-08-05T21:34:53 IST" finished-at="2022-08-05T21:34:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeClassOfA()[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="beforeClassOfA" is-config="true" duration-ms="6499" started-at="2022-08-05T21:34:53 IST" finished-at="2022-08-05T21:35:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassOfA -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="beforeMethod" is-config="true" duration-ms="20" started-at="2022-08-05T21:35:00 IST" finished-at="2022-08-05T21:35:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.InventoryCategoryTest.verifyUserCanAddNewCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyUserCanAddNewCategory()[pri:1, instance:regression.InventoryCategoryTest@3712b94]" name="verifyUserCanAddNewCategory" duration-ms="6439" started-at="2022-08-05T21:35:00 IST" finished-at="2022-08-05T21:35:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanAddNewCategory -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-08-05T21:35:06 IST" finished-at="2022-08-05T21:35:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanAddNewCategory status=SUCCESS method=InventoryCategoryTest.verifyUserCanAddNewCategory()[pri:1, instance:regression.InventoryCategoryTest@3712b94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2022-08-05T21:35:06 IST" finished-at="2022-08-05T21:35:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.InventoryCategoryTest.verifyCategoryAddedSuccessMessageIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyCategoryAddedSuccessMessageIsDisplayed()[pri:2, instance:regression.InventoryCategoryTest@3712b94]" name="verifyCategoryAddedSuccessMessageIsDisplayed" duration-ms="65" started-at="2022-08-05T21:35:06 IST" finished-at="2022-08-05T21:35:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCategoryAddedSuccessMessageIsDisplayed -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-08-05T21:35:06 IST" finished-at="2022-08-05T21:35:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCategoryAddedSuccessMessageIsDisplayed status=SUCCESS method=InventoryCategoryTest.verifyCategoryAddedSuccessMessageIsDisplayed()[pri:2, instance:regression.InventoryCategoryTest@3712b94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2022-08-05T21:35:06 IST" finished-at="2022-08-05T21:35:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.InventoryCategoryTest.verifyCategoryPageCountGetsIncreasedOnAddingNewCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyCategoryPageCountGetsIncreasedOnAddingNewCategory()[pri:3, instance:regression.InventoryCategoryTest@3712b94]" name="verifyCategoryPageCountGetsIncreasedOnAddingNewCategory" duration-ms="3315" started-at="2022-08-05T21:35:06 IST" finished-at="2022-08-05T21:35:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCategoryPageCountGetsIncreasedOnAddingNewCategory -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-08-05T21:35:10 IST" finished-at="2022-08-05T21:35:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCategoryPageCountGetsIncreasedOnAddingNewCategory status=SUCCESS method=InventoryCategoryTest.verifyCategoryPageCountGetsIncreasedOnAddingNewCategory()[pri:3, instance:regression.InventoryCategoryTest@3712b94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="verifyUserCanEditExistingCategory()[pri:4, instance:regression.InventoryCategoryTest@3712b94]" name="verifyUserCanEditExistingCategory" duration-ms="7377" started-at="2022-08-05T21:35:10 IST" finished-at="2022-08-05T21:35:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanEditExistingCategory -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-08-05T21:35:10 IST" finished-at="2022-08-05T21:35:10 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.InventoryCategoryTest.verifyUserCanEditExistingCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-08-05T21:35:17 IST" finished-at="2022-08-05T21:35:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanEditExistingCategory status=SUCCESS method=InventoryCategoryTest.verifyUserCanEditExistingCategory()[pri:4, instance:regression.InventoryCategoryTest@3712b94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2022-08-05T21:35:17 IST" finished-at="2022-08-05T21:35:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.InventoryCategoryTest.verifyCategoryUpdatedSuccessMessageIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyCategoryUpdatedSuccessMessageIsDisplayed()[pri:5, instance:regression.InventoryCategoryTest@3712b94]" name="verifyCategoryUpdatedSuccessMessageIsDisplayed" duration-ms="101" started-at="2022-08-05T21:35:17 IST" finished-at="2022-08-05T21:35:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCategoryUpdatedSuccessMessageIsDisplayed -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-08-05T21:35:17 IST" finished-at="2022-08-05T21:35:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCategoryUpdatedSuccessMessageIsDisplayed status=SUCCESS method=InventoryCategoryTest.verifyCategoryUpdatedSuccessMessageIsDisplayed()[pri:5, instance:regression.InventoryCategoryTest@3712b94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-08-05T21:35:17 IST" finished-at="2022-08-05T21:35:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.InventoryCategoryTest.verifyCategoryPageCountWillBeSameAfterEdit()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyCategoryPageCountWillBeSameAfterEdit()[pri:6, instance:regression.InventoryCategoryTest@3712b94]" name="verifyCategoryPageCountWillBeSameAfterEdit" duration-ms="3483" started-at="2022-08-05T21:35:17 IST" finished-at="2022-08-05T21:35:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCategoryPageCountWillBeSameAfterEdit -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-08-05T21:35:21 IST" finished-at="2022-08-05T21:35:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCategoryPageCountWillBeSameAfterEdit status=SUCCESS method=InventoryCategoryTest.verifyCategoryPageCountWillBeSameAfterEdit()[pri:6, instance:regression.InventoryCategoryTest@3712b94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2022-08-05T21:35:21 IST" finished-at="2022-08-05T21:35:21 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.InventoryCategoryTest.verifyUserCanDeleteExistingCategory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="verifyUserCanDeleteExistingCategory()[pri:7, instance:regression.InventoryCategoryTest@3712b94]" name="verifyUserCanDeleteExistingCategory" duration-ms="1271" started-at="2022-08-05T21:35:21 IST" finished-at="2022-08-05T21:35:22 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Deleted category is still displayed on UI expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Deleted category is still displayed on UI expected [false] but found [true]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at regression.InventoryCategoryTest.verifyUserCanDeleteExistingCategory(InventoryCategoryTest.java:99)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanDeleteExistingCategory -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="afterMethod" is-config="true" duration-ms="361" started-at="2022-08-05T21:35:22 IST" finished-at="2022-08-05T21:35:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanDeleteExistingCategory status=FAILURE method=InventoryCategoryTest.verifyUserCanDeleteExistingCategory()[pri:7, instance:regression.InventoryCategoryTest@3712b94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-08-05T21:35:22 IST" finished-at="2022-08-05T21:35:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.InventoryCategoryTest.verifyCategoryDeletedSuccessMessageIsDisplayed()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="verifyCategoryDeletedSuccessMessageIsDisplayed()[pri:8, instance:regression.InventoryCategoryTest@3712b94]" name="verifyCategoryDeletedSuccessMessageIsDisplayed" duration-ms="5076" started-at="2022-08-05T21:35:22 IST" finished-at="2022-08-05T21:35:27 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Category deleted message is not displayed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Category deleted message is not displayed expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at regression.InventoryCategoryTest.verifyCategoryDeletedSuccessMessageIsDisplayed(InventoryCategoryTest.java:107)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCategoryDeletedSuccessMessageIsDisplayed -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="afterMethod" is-config="true" duration-ms="355" started-at="2022-08-05T21:35:28 IST" finished-at="2022-08-05T21:35:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCategoryDeletedSuccessMessageIsDisplayed status=FAILURE method=InventoryCategoryTest.verifyCategoryDeletedSuccessMessageIsDisplayed()[pri:8, instance:regression.InventoryCategoryTest@3712b94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="verifyCategoryPageCountWillGetDecreasedAfterDelete()[pri:9, instance:regression.InventoryCategoryTest@3712b94]" name="verifyCategoryPageCountWillGetDecreasedAfterDelete" duration-ms="3608" started-at="2022-08-05T21:35:28 IST" finished-at="2022-08-05T21:35:31 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [24] but found [25]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [24] but found [25]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at regression.InventoryCategoryTest.verifyCategoryPageCountWillGetDecreasedAfterDelete(InventoryCategoryTest.java:116)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCategoryPageCountWillGetDecreasedAfterDelete -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-08-05T21:35:28 IST" finished-at="2022-08-05T21:35:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void regression.InventoryCategoryTest.verifyCategoryPageCountWillGetDecreasedAfterDelete()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="afterMethod" is-config="true" duration-ms="332" started-at="2022-08-05T21:35:31 IST" finished-at="2022-08-05T21:35:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCategoryPageCountWillGetDecreasedAfterDelete status=FAILURE method=InventoryCategoryTest.verifyCategoryPageCountWillGetDecreasedAfterDelete()[pri:9, instance:regression.InventoryCategoryTest@3712b94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="afterClass" is-config="true" duration-ms="975" started-at="2022-08-05T21:35:32 IST" finished-at="2022-08-05T21:35:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterSuiteMethod()[pri:0, instance:regression.InventoryCategoryTest@3712b94]" name="afterSuiteMethod" is-config="true" duration-ms="422" started-at="2022-08-05T21:35:42 IST" finished-at="2022-08-05T21:35:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuiteMethod -->
      </class> <!-- regression.InventoryCategoryTest -->
    </test> <!-- regression -->
  </suite> <!-- KTCTC -->
</testng-results>
